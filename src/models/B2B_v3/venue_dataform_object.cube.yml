cubes:
- name: venue_dataform_object
  data_source: default
  sql: >
    select
      event_date
      ,case 
        when is_measurement_protocol_hit = true then timestamp_seconds(event_params_custom.event_custom_timestamp) 
        else timestamp_micros(time.event_timestamp)
      end as event_timestamp
      ,user_pseudo_id
      ,event_name
      ,stream_id
      ,is_measurement_protocol_hit
      ,device.category as device_category
      ,device.web_info.hostname as hostname
      ,geo.country
      ,device.language as device_language
      ,event_params_custom.client_connectivity
      ,event_params_custom.locale_translation_source
      ,event_params_custom.locale_translation_destination
      ,event_params_custom.content_category
      ,event_params_custom.page_type
      ,event_params_custom.venue_id
      ,event_params_custom.organisation_id
      ,event_params_custom.object_id
      ,event_params_custom.artist_id
      ,event_params_custom.audio_language
      ,safe_cast(user_properties.user_age as int64) as user_age
      ,user_properties.user_gender
    from `smartify-cc94e.superform_outputs_151371783.ga4_events`
    where event_params_custom.organisation_id = '{COMPILE_CONTEXT.securityContext.organisation_id}'
      and ('{COMPILE_CONTEXT.securityContext.venue_id}' IS NULL
          or '{COMPILE_CONTEXT.securityContext.venue_id}' = ''
          or '{COMPILE_CONTEXT.securityContext.venue_id}' = 'undefined'
          or event_params_custom.venue_id in unnest(split('{COMPILE_CONTEXT.securityContext.venue_id}', ','))
      )
      and (event_params_custom.organisation_id != 'org_smithsonian' or (event_params_custom.organisation_id = 'org_smithsonian' and not contains_substr(event_params_custom.venue_id, ',')))
      and event_date >= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 13 MONTH)
      --and event_name in ('page_view','screen_view','select_component','scan_recognition_hit','translate_text','session_start','play_description','first_visit','add_favorite','track_start','click_link','track_quartile_25','track_quartile_50','track_pause','track_quartile_75','share','track_complete','track_pseudo_complete','track_start_5s','qrcode_open','click_button','track_resume','remove_favorite','scan_recognition_hit_unpublished','art_details','object_scan','complete_content','inapp_click','add_artwork_favorite','Explore_Artworks','track_forward','Load_AR_Experience','Open_AR_Experience','AR_Detail','track_backward')
      and stream_id in ("1047860117","1047860114","1913717213","2817285551","10374153553")
      and event_params_custom.object_id is not null
      and not contains_substr(event_params_custom.venue_id, ',')

  
  dimensions:
    - name: datetime
      type: time
      sql: event_timestamp

    - name: user_connectivity
      type: string
      sql: |-
        case
          when (client_connectivity = '' or client_connectivity is null) then 'Unknown'
          when client_connectivity in ('WIFI', 'Internet Corporate', 'Internet Highspeed') then 'Wi-Fi'
          else 'Cellular'
        end
      
    - name: device_platform
      type: string
      sql: |-
        case
          when stream_id = '1047860117' then 'iOS'
          when stream_id = '1047860114' then 'Android'
          when (stream_id = '1913717213' and device_category in ('tablet','desktop')) then 'Desktop'
          when (stream_id = '10374153553' or (stream_id = '1913717213' and is_measurement_protocol_hit = true)) then 'Hardware'
          else 'Webapp'
        end

    - name: user_age_range
      type: string
      sql: |-
        case
          when user_age < 18 then '- 18'
          when user_age >= 18 and user_age < 25 then '18 - 24'
          when user_age >= 25 and user_age < 35 then '25 - 34'
          when user_age >= 35 and user_age < 45 then '35 - 44'
          when user_age >= 45 and user_age < 55 then '45 - 54'
          when user_age >= 55 and user_age < 65 then '55 - 64'
          when user_age >= 65 and user_age < 71 then '65 - 70'
          when user_age >= 71 then '71+' 
          else 'Unknown'
        end

    - name: user_gender
      type: string
      sql: |-
        case
          when user_gender in ('Male', 'MALE', 'Man', 'Mand', 'Masculino', '男性', 'זכר', 'Männlich', 'Mann', 'Homme', 'Hombre') then 'Male'
          when user_gender in ('Female', 'Woman', 'Femme', 'Mujer', 'Vrouw', 'Weiblich', 'Frau', 'Feminino', '女性', 'Donna', 'Kvinde') then 'Female'
          when user_gender in ('Unspecified', 'Non spécifié', 'Sin especificar') then 'Unspecified'
          when user_gender in ('Other', 'Autre') then 'Other'
          else 'Unknown'
        end

    - name: country
      type: string
      sql: if(country = '', 'Unknown', country)
    
    - name: device_language
      type: string
      sql: device_language
      primaryKey: true
      shown: false

    - name: audio_language
      type: string
      sql: audio_language

    - name: original_language
      type: string
      sql: locale_translation_source

    - name: translated_language
      type: string
      sql: locale_translation_destination
    
    - name: translation_from_to
      type: string
      sql: concat({original_language}, ' → ', {translated_language})

    - name: organisation_id
      type: string
      sql: organisation_id
      primaryKey: true
      shown: true
    
    - name: venue_id
      type: string
      sql: case when (venue_id = '' or venue_id is null) then 'No linked venue' else venue_id end
      primaryKey: true
      shown: true

    - name: object_id
      type: string
      sql: object_id
      title: 'SID'
      primaryKey: true
      shown: true

    - name: artist_id
      type: string
      sql: artist_id
      primaryKey: true
      shown: true
  
  measures:
    - name: object_views
      type: count
      title: 'Views'
      sql: event_name
      filters:
        - sql: event_name in ('page_view', 'screen_view')
        - sql: contains_substr(page_type, 'object_dp')

    - name: object_scans
      type: count
      title: 'Scans'
      sql: event_name
      filters:
        - sql: event_name = 'scan_recognition_hit'

    - name: object_favorites
      type: count
      title: 'Favorites'
      sql: event_name
      filters:
        - sql: event_name in ('add_favorite')
        - sql: object_id is not null

    - name: total_translations
      type: count
      title: 'Total Translations'
      sql: event_name
      filters:
            - sql: event_name in ('translate_text')

    - name: total_ditactions
      type: count
      title: 'Total Text-to-Speech'
      sql: event_name
      filters:
        - sql: event_name = 'play_description'

    - name: object_users
      type: count_distinct_approx
      title: 'Object Users'
      sql: user_pseudo_id

    - name: object_view_users
      type: count_distinct_approx
      title: 'View Users'
      sql: user_pseudo_id
      filters:
        - sql: event_name in ('screen_view', 'page_view')
        - sql: contains_substr(page_type, 'object_dp')

    - name: object_scan_users
      type: count_distinct_approx
      title: 'Scan Users'
      sql: user_pseudo_id
      filters:
        - sql: event_name = 'scan_recognition_hit'
    
    - name: object_favorite_users
      type: count_distinct_approx
      title: 'Favorite Users'
      sql: user_pseudo_id
      filters:
        - sql: event_name in ('add_favorite')
        - sql: object_id is not null

    - name: translation_users
      type: count_distinct_approx
      title: 'Translation Users'
      sql: user_pseudo_id
      filters:
        - sql: event_name in ('translate_text')

    - name: ditaction_users
      type: count_distinct_approx
      title: 'Text-to-Speech Users'
      sql: user_pseudo_id
      filters:
        - sql: event_name = 'play_description'

    - name: object_view_per_user
      type: number
      title: 'Object View Per User'
      sql: "safe_divide({object_views}, {object_view_users})"

    - name: object_scan_per_user
      type: number
      title: 'Object Scan Per User'
      sql: "safe_divide({object_scans}, {object_scan_users})"
      #sql: case when {object_scan_users} = 0 then 0 else {object_scans} / {object_scan_users} end

    - name: object_favorite_per_user
      type: number
      title: 'Object Favorite Per User'
      #sql: case when {object_favorite_users} = 0 then 0 else {object_favorites} / {object_favorite_users} end
      sql: "safe_divide({object_favorites}, {object_favorite_users})"

  joins:
    - name: venue_lookup_objects
      relationship: many_to_one
      sql: '{CUBE.object_id} = {venue_lookup_objects.object_sid}'
    - name: venue_lookup_artists
      relationship: many_to_one
      sql: '{CUBE.artist_id} = {venue_lookup_artists.artist_sid}'
    - name: venue_lookup_language
      relationship: many_to_one
      sql: '{CUBE.device_language} = {venue_lookup_language.device_language}'

  # pre_aggregations:
  #   - name: object_aggregation
  #     measures:
  #       - venue_dataform_object.object_views
  #       - venue_dataform_object.object_scans
  #       - venue_dataform_object.object_favorites
  #       - venue_dataform_object.total_translations
  #       - venue_dataform_object.total_ditactions
  #       - venue_dataform_object.object_users
  #       - venue_dataform_object.object_view_users
  #       - venue_dataform_object.object_scan_users
  #       - venue_dataform_object.object_favorite_users
  #       - venue_dataform_object.translation_users
  #       - venue_dataform_object.ditaction_users
  #     dimensions:
  #       - venue_dataform_object.device_platform
  #       - venue_dataform_object.user_connectivity
  #       - venue_dataform_object.user_age_range
  #       - venue_dataform_object.user_gender
  #       - venue_dataform_object.country
  #       - venue_dataform_object.original_language
  #       - venue_dataform_object.translated_language
  #       - venue_dataform_object.translation_from_to
  #       - venue_dataform_object.venue_id
  #       - venue_dataform_object.object_id
  #       - venue_dataform_object.artist_id
  #       - venue_lookup_objects.object_name
  #       - venue_lookup_objects.object_category
  #       - venue_lookup_artists.artist_name
  #       - venue_lookup_language.language_name
  #     timeDimension: venue_dataform_object.datetime
  #     granularity: day